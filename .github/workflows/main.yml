name: backend workflow

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'users/**'
      - 'recipes/**'
      - 'docker-compose.yml'
      - '.github/workflows/main.yml'
  
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

  workflow_dispatch:
    inputs:
      reason:
        description: 'Причина ручного запуска'
        required: false
        default: 'Manual trigger'

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: foodgram_database
          POSTGRES_USER: foodgram_user
          POSTGRES_PASSWORD: user_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -d foodgram_database -U foodgram_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_SETTINGS_MODULE: foodgram.settings
      DB_ENGINE: django.db.backends.postgresql
      SECRET_KEY: ${{ secrets.CI_SECRET_KEY }}
      DEBUG: 'False'
      ALLOWED_HOSTS: 'localhost,127.0.0.1'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev python3-dev

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install flake8 coverage

      - name: Wait for database
        run: |
          echo "Waiting for PostgreSQL..."
          while ! nc -z localhost 5432; do
            sleep 1
          done
          echo "PostgreSQL ready"

      - name: Run migrations
        run: |
          python backend/manage.py makemigrations
          python backend/manage.py migrate

      - name: Lint with flake8
        run: |
          flake8 api/ users/ recipes/ --exclude migrations
