version: '3.8'

services:
  db:
    image: postgres:14
    container_name: foodgram_database
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: leakmachine/vinokurov-ivan-foodgram-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: foodgram-backend
    restart: always
    env_file:
      - ./.env
    volumes:
      - ./backend:/app
      - static_volume:/app/static_django
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  frontend:
    image: leakmachine/vinokurov-ivan-foodgram-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: foodgram-frontend
    restart: always
    volumes:
      - frontend_build:/app/build

  nginx:
    image: nginx:1.25.4-alpine
    container_name: foodgram-proxy
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_build:/usr/share/nginx/html
      - static_volume:/static_django
      - media_volume:/media
      - ./docs:/usr/share/nginx/html/api/docs:ro

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_build:
